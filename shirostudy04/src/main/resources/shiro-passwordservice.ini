[main]
#设置passwordService，主要作用是用来加密密码以及具体进行密码比对
passwordService=org.apache.shiro.authc.credential.DefaultPasswordService
#passwordService内部使用的hashService也是默认值
#passwordService是用来哈希密码的通用组件，可灵活配置多个参数
#通过设置算法、公盐、私盐、迭代次数等来提高安全性和可重用性
#如果在这里指定了DefaultHashService，由于其内部的setGeneratePublicSalt默认是false因此不会生成公盐
#但是如果在这里不指定，则passwordService内部也会指定一个DefaultHashService，只是会设置他的setGeneratePublicSalt
#为true,这样会导致每次第一次请求hashService进行加密的时候都会生成一个新的公盐，当然如果是第二次请求以及以后
#的多次请求由于已经有公盐了就不会生成新的公盐。所以一般都是采用这种直接设置的方式，采用默认是false的方式
#这样就相当于与没有盐（公盐和私盐都没有设置）相当于简单的对密码进行加密处理而已。
hashService=org.apache.shiro.crypto.hash.DefaultHashService
passwordService.hashService=$hashService
#passwordService内部使用的hashFormat也是默认值
#Shiro1CryptFormat是一个可以在string和hash对象之间自由转换的format对象
hashFormat=org.apache.shiro.crypto.hash.format.Shiro1CryptFormat
passwordService.hashFormat=$hashFormat
#passwordService内部使用的hashFormatFacoty 也是默认值
hashFormatFactory=org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory
passwordService.hashFormatFactory=$hashFormatFactory

#注册passwordMatcher，用于对加密密码进行比对，里面使用了passwordService，passwordService做具体的比较工作
passwordMatcher=org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService=$passwordService

myRealm=com.xiaojihua.realm.MyRealm
myRealm.passwordService=$passwordService
#设置passwordMatcher，不设置的话走SimpleCredentialMatcher，只是简单的将token和info中的密码进行equals
myRealm.credentialsMatcher=$passwordMatcher
securityManager.realms=$myRealm
