[main]
credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
#散列后的密码为16进制默认是base64
credentialsMatcher.storedCredentialsHexEncoded=true

dataSource=com.alibaba.druid.pool.DruidDataSource
dataSource.driverClassName=com.mysql.jdbc.Driver
dataSource.url=jdbc:mysql://localhost:3306/shiro
dataSource.username=root
dataSource.password=root

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource=$dataSource
jdbcRealm.permissionsLookupEnabled=true
#JdbcRealm默认的查询SQL不能满足我们现在的需求需要修改，也可以从JdbcRealm中继承并覆盖相关方法，具体可以参考其API
#制定salt的类型，COLUMN代表在存储在数据库中的某一列
jdbcRealm.saltStyle=COLUMN
#覆盖默认的authenticationQuery，我们的盐是采用username和password_salt组合而成的因此需要修改SQL
jdbcRealm.authenticationQuery=select password, concat(username,password_salt) from users where username = ?
jdbcRealm.credentialsMatcher=$credentialsMatcher
securityManager.realms=$jdbcRealm
