[main]
credentialsMatcher=com.xiaojihua.credentials.RetryLimitHashedCredentialsMatcher
#这里的加密算法设置必须和PasswordHelper中的逻辑对应，否则将出现不匹配的现象
#因为提交的token中的密码是明文还需要使用这里的算法进行哈希，哈希后再跟数据库中的进行比较，因此逻辑必须一样
#另外就是使用的盐也必须一样
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
credentialsMatcher.storedCredentialsHexEncoded=true

#自定义realm实现读取数据库中的用户数据以及权限数据
userRealm=com.xiaojihua.realm.UserRealm
userRealm.credentialsMatcher=$credentialsMatcher
#启用缓存，默认是false
userRealm.cachingEnabled=true
#启用身份验证缓存，即缓存AuthenticationInfo信息，默认是false
userRealm.authenticationCachingEnabled=true
#缓存AuthenticationInfo的缓存名称
userRealm.authenticationCacheName=authenticationCache
#启用授权缓存，即缓存AuthorizationInfo信息，默认是false
userRealm.authorizationCachingEnabled=true
#缓存AuthorizationInfo的缓存名称
userRealm.authorizationCacheName=authorizationCache
securityManager.realms=$userRealm

#缓存管理器，这里采用EhCacheManager
cacheManager=org.apache.shiro.cache.ehcache.EhCacheManager
cacheManager.cacheManagerConfigFile=classpath:shiro-ehcache.xml
securityManager.cacheManager=$cacheManager

